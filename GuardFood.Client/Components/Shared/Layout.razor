@inject IJSRuntime Js;
@inject DialogService DialogService;

<style>

    .rz-sidebar {
        z-index: 999 !important;
    }

</style>

<RadzenComponents />

<RadzenLayout>
    <RadzenHeader>
        @if (usuario != null)
        {
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                    <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                    <div @onclick="redirecionaTelaInicial" style="cursor: pointer">
                        @if (restaurante?.MidiaId == null)
                        {
                            <RadzenIcon Icon="restaurant" Style="color: var(--rz-header-color); padding-right: 1rem" />
                        }
                        else
                        {
                            <RadzenImage Path="@("/Midia/GetMidia?id=" + restaurante.MidiaId)" class="rz-gravatar" Style="margin-right:0.5rem" />
                        }
                        <RadzenLabel Text="@restaurante?.Nome" />
                    </div>
                </RadzenStack>
                <RadzenStack>
                    <RadzenProfileMenu>
                        <Template>
                            <RadzenLabel Text="@(usuario?.Nome?.Split(" ")?.First())" Style="margin-right: 0.5rem" />
                            <RadzenGravatar Email="@(usuario?.Email)" />
                        </Template>
                        <ChildContent>
                            @*<RadzenProfileMenuItem Text="Ver Perfil" Path="menu" Icon="account_circle"></RadzenProfileMenuItem>*@
                            <div @onclick="exibePopupTrocaSenha">
                                <RadzenProfileMenuItem Text="Trocar Senha" Icon="lock_reset"></RadzenProfileMenuItem>
                            </div>
                            @*<div @onclick="temaClaro">
                                <RadzenProfileMenuItem Visible="!LightMode" Text="Modo Claro" Icon="light_mode"></RadzenProfileMenuItem>
                            </div>
                            <div @onclick="temaEscuro">
                                <RadzenProfileMenuItem Visible="LightMode" Text="Modo Escuro" Icon="dark_mode" @onclick="temaEscuro"></RadzenProfileMenuItem>
                            </div>*@
                            <div onclick="sairSistema()">
                                <RadzenProfileMenuItem Text="Sair" Icon="logout"></RadzenProfileMenuItem>
                            </div>
                        </ChildContent>
                    </RadzenProfileMenu>
                </RadzenStack>
            </RadzenStack>
        }
        else
        {
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0" Style="height: 100%;">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="padding-left:1rem; height: 100%">
                    <RadzenText Style="color: var(--rz-header-color);">Steak with Fries</RadzenText>
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Style="padding-right:1rem">
                    <RadzenButton Text="Acessar" Variant="Variant.Filled" ButtonStyle="ButtonStyle.Warning" Click='() => redirecionaTela("/Login")' />
                </RadzenStack>
            </RadzenStack>
        }
    </RadzenHeader>
    @if(usuario != null)
    {
        <RadzenSidebar @bind-Expanded="@sidebarExpanded" Responsive="true">
            <RadzenPanelMenu>
                @if(usuario.Tipo == Usuario.TipoUsuario.Funcionario)
                {
                    <RadzenPanelMenuItem Text="Produtos" Icon="inventory_2" Path="/Produto" />
                    <RadzenPanelMenuItem Text="Pedidos" Icon="receipt_long" Path="/Pedido" />
                }
                @if (usuario.Tipo == Usuario.TipoUsuario.Master)
                {
                    <RadzenPanelMenuItem Text="Mesas" Icon="table_restaurant" Path="/Mesa" />
                    <RadzenPanelMenuItem Text="Usuários" Icon="account_box" Path="/Usuario" />
                    <RadzenPanelMenuItem Text="Config. Restaurante" Icon="settings" Path="/Restaurante/Configuracoes" />
                    <RadzenPanelMenuItem Text="Home" Icon="home" Path="/Home/Dashboard" />
                    <RadzenPanelMenuItem Text="Produtos" Icon="inventory_2" Path="/Produto" />
                    <RadzenPanelMenuItem Text="Pedidos" Icon="receipt_long" Path="/Pedido" />
                }

            </RadzenPanelMenu>
        </RadzenSidebar>
    }
    <RadzenBody>
        <div id="corpo-principal" class="rz-p-4">
        </div>
    </RadzenBody>
</RadzenLayout>

@code {

    [Parameter]
    public Usuario usuario { get; set; } = null;

    [Parameter]
    public Restaurante restaurante { get; set; }

    [Parameter]
    public bool LightMode { get; set; }

    bool sidebarExpanded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("insereBody");
        await base.OnAfterRenderAsync(firstRender);
    }

    async void temaClaro()
    {
        LightMode = true;
        await Js.InvokeVoidAsync("temaClaro");
    }

    async void temaEscuro()
    {
        LightMode = false;
        await Js.InvokeVoidAsync("temaEscuro");
    }

    async void exibePopupTrocaSenha()
    {
        await DialogService.OpenAsync<GuardFood.Client.Components.Autenticacao.TrocaSenha>("Trocar Senha", null, new DialogOptions() { Width = "400px", Height = "auto", Resizable = true, Draggable = true });
    }

    async void redirecionaTela(string detalhe)
    {
        await Js.InvokeVoidAsync("redirecionaTela", detalhe);
    }

    async void redirecionaTelaInicial()
    {
        await Js.InvokeVoidAsync("redirecionaTela", "/");
    }

    async void sairSistema()
    {
        await Js.InvokeVoidAsync("sairSistema");
    }

    async void redirecionaLogin()
    {
        // Use o método JavaScript para redirecionar para a página de login.
        await Js.InvokeVoidAsync("redirecionaTela", "/Login");
    }

}