@inject IJSRuntime Js;
@inject DialogService DialogService;
@inject IServiceScopeFactory ScopeFactory;

<RadzenTemplateForm TItem="Produto" Data=@produto Submit=@OnSubmit>
    <RadzenFieldset Text="Dados Produto">
        <RadzenStack Gap="1rem" Class="rz-p-4 rz-p-md-12" Style="padding: 0 !important">
            <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenLabel Text="Nome" />
                    <RadzenTextBox Name="Nome" @bind-Value=@produto.Nome Style="display: block; width: 100%" MaxLength="100" AutoComplete="false" />
                    <RadzenRequiredValidator Component="Nome" Text="Nome é de Preenchimento Obrigatório" Popup="true" Style="position: absolute" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenLabel Text="Descrição" />
                    <RadzenTextBox Name="Descricao" @bind-Value=@produto.Descricao Style="display: block; width: 100%" MaxLength="100" AutoComplete="false" />
                    <RadzenRequiredValidator Component="Descricao" Text="Descrição é de Preenchimento Obrigatório" Popup="true" Style="position: absolute" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow AlignItems="AlignItems.Center" RowGap="0.25rem">
                <RadzenColumn Size="12" SizeMD="12">
                    <RadzenLabel Text="Valor" />
                    <RadzenNumeric RadzenNumeric TValue="decimal" Format="C" Name="Valor" @bind-Value=@produto.Valor Style="display: block; width: 100%" MaxLength="100" AutoComplete="false" />
                    <RadzenRequiredValidator Component="Valor" Text="Valor é de Preenchimento Obrigatório" Popup="true" Style="position: absolute" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenRow AlignItems="AlignItems.Center" Class="rz-mt-4">
                <RadzenColumn Size="12" Offset="0" SizeMD="8" OffsetMD="4">
                    <RadzenButton ButtonType="ButtonType.Submit" Text="@(editar ? "Editar" : "Adicionar")"></RadzenButton>
                </RadzenColumn>
            </RadzenRow>
        </RadzenStack>
    </RadzenFieldset>
</RadzenTemplateForm>


@code {

    [Parameter]
    public DataGridProduto dataGridProduto { get; set; }

    [Parameter]
    public Produto produto { get; set; } = new Produto();

    [Parameter]
    public bool editar { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    async void OnSubmit(Produto produto)
    {
        using (var scope = ScopeFactory.CreateScope())
        {
            var retorno = scope.ServiceProvider.GetRequiredService<IProdutoRepository>().InserirEditar(produto);

            await Js.InvokeVoidAsync("notifica", retorno.Sucesso ? "" : "Erro", retorno.Mensagem, retorno.Sucesso);
            if (retorno.Sucesso)
            {
                DialogService.Close();
                await dataGridProduto.Reset();
            }
        }

    }
}