@inject GuardFood.Core.Data.Interfaces.IRestauranteRepository restauranteRepository;
@model Mesa

@{
    Layout = "";
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <title>Cardário - @(Model.Restaurante.Nome)</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/GuardFood.Client.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/iziToast/iziToast.css" asp-append-version="true" />
    <link rel="stylesheet" href="_content/Radzen.Blazor/css/material-base.css?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)" id="temaBlazor">

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/iziToast/iziToast.js" asp-append-version="true"></script>

    <style>

        .rz-dropdown-clear-icon {
            margin-right: 1rem;
        }

        .rz-header .rz-profile-menu {
            background-color: transparent !important;
        }

        .rz-layout > .rz-header, .rz-sidebar-toggle:hover {
            background-color: @Html.Raw(string.IsNullOrEmpty(Model?.Restaurante?.CorPrimaria) ? "var(--rz-header-background-color)" : Model?.Restaurante?.CorPrimaria) !important;
        }

    </style>
</head>
<body>

    <component type="typeof(GuardFood.Client.Components.CardapioPedido.CardapioPedido)" render-mode="Server" param-mesa="Model" param-pedidoProdutos ="ViewBag.PedidoProdutos" param-restaurante="Model.Restaurante" param-categorias="ViewBag.Categorias" />

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)" asp-append-version="true"></script>

    <script>

        function GetCategoriaAtual() {
            const categorias = document.querySelectorAll(".categoria");
            let categoriaAtual = 0;

            categorias.forEach((categoria) => {
                const rect = categoria.getBoundingClientRect();
                if (rect.top >= 0 && rect.top <= window.innerHeight / 2) {
                    categoriaAtual = parseInt(categoria.dataset.ordem);
                }
            });

            // Chama o método Blazor para atualizar a categoria atual
            return categoriaAtual;
        }

        function RedirecionaCategoria(id) {
            document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
        }

    </script>

</body>
</html>
